{
  "engine" : "hystat",
  "module" : "hystat",
  "name" : "Provide hy statistics",
  "cron" : 60,
  "cronOffset" : 30,
  "timeout" : 120000,
  "totalSupply" : 21000000,
  "tradeSupply" : 7000000,
  "reservedSupply" : 1000000,
  "factor" : 18,
  "quartz":{
    "_root" : [
      "sync hystat"
    ],
    "cron" : [
      "time 240000",
      "rout /e/valuations/rate/hy/usd",
      "poke local::rate",
      "call getMaximumSupply",
      "poke local::maximumSupply",
      "call getReservedSupply",
      "poke local::reservedSupply",
      "call getCirculatingSupply",
      "poke local::circulatingSupply",
      "atom true 18",
      "poke local::circulatingSupplyAtom",
      "call getCirculatingSupplyWithoutReserve",
      "poke local::circulatingSupplyWithoutReserve",
      "atom true 18",
      "poke local::circulatingSupplyWithoutReserveAtom",
      "call maybeUpdateEthList"
    ],
    "details" : [
      "done { rate:'$local::rate', volume:'15635.3', maximumSupply:'$local::maximumSupply', reservedSupply:'$local::reservedSupply', circulatingSupply:'$local::circulatingSupply', circulatingSupplyWithoutReserve:'$local::circulatingSupplyWithoutReserve' }"
    ],
    "getMaximumSupply" : [
      "peek totalSupply",
      "form"
    ],
    "getReservedSupply" : [
      "peek reservedSupply",
      "form"
    ],
    "getCirculatingSupply" : [
      "# Tomo supply is accounted for in the Ethereum supply calculation",
      "with supplyEth rout /asset/eth.hy/balance/0x6bcba1899e6f25a2369c99e5cac6943a9cfab287",
      "math '$tradeSupply - $supplyEth + $reservedSupply'",
      "form"
    ],
    "getCirculatingSupplyWithoutReserve" : [
      "peek local::circulatingSupply",
      "math '- $reservedSupply'",
      "form"
    ],
    "getTokenDetails" : [
      "time 30000",
      "tran .value",
      "rout /asset/$/details",
      "with tokenSymbol [data,$] [tran,'.symbol'] [splt,'.'] [pick,-1]",
      "done {'chainId':1,'address':'${.contract}','name':'${.name}','symbol':'$tokenSymbol','decimals':${.factor}}"
    ],
    "maybeUpdateEthList" : [
      "peek local::ethTokenList ",
      "tran .timestamp 1 @update",
      "date epoch",
      "math +(3600*24)",
      "poke nextupdate",
      "date now",
      "true <$nextupdate @skipUpdate",
      "@update",
      "call getEthTokenList",
      "poke local::ethTokenList",
      "done 'Ethereum DeFi token list updated.'",
      "@skipUpdate",
      "done 'Skipped Ethereum DeFi token list update.'"
    ],
    "getEthTokenList" : [
      "with timestamp [date,'isoUtcDateTime','now']",
      "time 240000",
      "# start with a curated list, to enable double checking against scams",
      "#   semantic versioning:",
      "#     - increment major version when tokens are removed",
      "#     - increment minor version when tokens are added",
      "#     - increment patch version when tokens already on the list have minor details changed",
      "poke version {'major':0,'minor':0,'patch':0}",
      "data ['eth.hy','eth.ampl','eth.ant','eth.dai','eth.dzar','eth.link','eth.pax','eth.paxg','eth.rep','eth.ring','eth.swap','eth.tusd','eth.uma','eth.usdc','eth.usdt','eth.wbtc','eth.yfi','eth.zrx']",
      "# rout /asset",
      "# find 'eth.'",
      "each getTokenDetails",
      "done {'name':'hybrix.io','logoURI':'https://hybrix.io/user/themes/hybrix-theme/images/icon.png','keywords':['defi','hybrix','multiledger','hy'],'timestamp':'$timestamp','tokens':$,'version':$version}"
    ]
  },
  "router":{
    "details" :"Return all numbers.",
    "maximumSupply" :"Get the maximum supply of HY.",
    "reservedSupply" :"Get the reserved supply of HY.",
    "circulatingSupply" :"Get the circulating supply of HY.",
    "circulatingSupplyAtom" :"Get the atomic circulating supply of HY.",
    "circulatingSupplyWithoutReserve" :"Get the circulating supply of HY without reserve.",
    "circulatingSupplyWithoutReserveAtom" :"Get the circulating supply of HY without reserve.",
    "supplyFactor" :"Get the factor (nr of decimals).",
    "currentPrice" :"Get the current price of HY in USD.",
    "currentVolume" :"Get the current exchange volume for HY.",
    "ethTokenList" :"Provide a curated hybrix tokenlist for Uniswap.",
    "maybeUpdateEthList" :"Provide a curated hybrix tokenlist for Uniswap."
  }
}
